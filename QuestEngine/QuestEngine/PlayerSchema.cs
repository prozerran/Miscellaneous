// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace QuestEngine.PlayerData
{

using global::System;
using global::FlatBuffers;

public struct Player : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Player GetRootAsPlayer(ByteBuffer _bb) { return GetRootAsPlayer(_bb, new Player()); }
  public static Player GetRootAsPlayer(ByteBuffer _bb, Player obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Player __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
  public int Quest { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Milestone { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long Pointsearned { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<Player> CreatePlayer(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      int quest = 0,
      int milestone = 0,
      long pointsearned = 0) {
    builder.StartObject(4);
    Player.AddPointsearned(builder, pointsearned);
    Player.AddMilestone(builder, milestone);
    Player.AddQuest(builder, quest);
    Player.AddName(builder, nameOffset);
    return Player.EndPlayer(builder);
  }

  public static void StartPlayer(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddQuest(FlatBufferBuilder builder, int quest) { builder.AddInt(1, quest, 0); }
  public static void AddMilestone(FlatBufferBuilder builder, int milestone) { builder.AddInt(2, milestone, 0); }
  public static void AddPointsearned(FlatBufferBuilder builder, long pointsearned) { builder.AddLong(3, pointsearned, 0); }
  public static Offset<Player> EndPlayer(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Player>(o);
  }
  public static void FinishPlayerBuffer(FlatBufferBuilder builder, Offset<Player> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedPlayerBuffer(FlatBufferBuilder builder, Offset<Player> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
